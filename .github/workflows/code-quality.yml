name: Code Quality

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  # Frontend code quality
  frontend-quality:
    name: Frontend Code Quality
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install dependencies
      run: npm ci

    - name: ESLint
      run: npx eslint . --ext .ts,.tsx,.js,.jsx --format json --output-file eslint-results.json
      continue-on-error: true

    - name: Prettier check
      run: npx prettier --check .
      continue-on-error: true

    - name: TypeScript check
      run: npx tsc --noEmit
      continue-on-error: true

    - name: Bundle analyzer
      run: |
        npm run build
        npx @next/bundle-analyzer
      env:
        ANALYZE: true

    - name: Upload ESLint results
      uses: actions/upload-artifact@v4
      with:
        name: eslint-results
        path: frontend/eslint-results.json

  # Backend code quality
  backend-quality:
    name: Backend Code Quality
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install flake8 black isort mypy bandit vulture

    - name: Flake8 linting
      run: flake8 app/ --statistics --tee --output-file=flake8-results.txt
      continue-on-error: true

    - name: Black formatting check
      run: black --check --diff app/
      continue-on-error: true

    - name: Import sorting check
      run: isort --check-only --diff app/
      continue-on-error: true

    - name: Type checking with mypy
      run: mypy app/ --ignore-missing-imports --txt-report mypy-results
      continue-on-error: true

    - name: Security check with bandit
      run: bandit -r app/ -f json -o bandit-results.json
      continue-on-error: true

    - name: Dead code detection
      run: vulture app/ --min-confidence 80
      continue-on-error: true

    - name: Upload code quality results
      uses: actions/upload-artifact@v4
      with:
        name: backend-quality-results
        path: |
          backend/flake8-results.txt
          backend/mypy-results/
          backend/bandit-results.json

  # Code complexity analysis
  complexity-analysis:
    name: Code Complexity Analysis
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

    - name: CodeClimate analysis
      uses: paambaati/codeclimate-action@v5.0.0
      env:
        CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
      with:
        coverageLocations: |
          backend/coverage.xml:coverage.py

  # Performance analysis
  performance-check:
    name: Performance Check
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Lighthouse CI
      uses: treosh/lighthouse-ci-action@v12
      with:
        configPath: './frontend/.lighthouserc.js'
        uploadArtifacts: true
        temporaryPublicStorage: true

    - name: Bundle size check
      uses: preactjs/compressed-size-action@v2
      with:
        repo-token: '${{ secrets.GITHUB_TOKEN }}'
        pattern: './frontend/.next/**/*.js'
        exclude: '{./frontend/.next/**/*.map,./frontend/.next/cache/**/*}'

  # Documentation check
  docs-check:
    name: Documentation Check
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Check README links
      uses: gaurav-nelson/github-action-markdown-link-check@v1
      with:
        use-quiet-mode: 'yes'
        use-verbose-mode: 'yes'

    - name: Spell check
      uses: streetsidesoftware/cspell-action@v5
      with:
        files: |
          **/*.md
          **/*.txt
          frontend/src/**/*.{ts,tsx}
          backend/app/**/*.py
